
  
  
  
  
  Codelabs  - Flutter 
  

  
  
  

  
  
  

  
  

  
  
  
  
  

  
  
  
  
  
  

  


    












Docs



Get started


1. Install

2. Set up an editor

3. Test drive

4. Write your first app

5. Learn more

From another platform?
    


Flutter for Android devs

Flutter for iOS devs

Flutter for React Native devs

Flutter for web devs

Flutter for Xamarin.Forms devs



Dart language overview



Samples & tutorials


Sample apps on GitHub

Cookbook

Codelabs

Tutorials



Development


User interface
    


Introduction to Widgets

Building layouts
    


Layouts in Flutter


Tutorial


Box constraints




Adding interactivity

Assets and images

Navigation & routing

Animations
    


Introduction


Overview


Tutorial


Hero animations


Staggered animations




Advanced UI
    


Slivers


Gestures




Widget catalog



Data & backend
    


State management
    


Introduction


Think declaratively


Ephemeral vs app state


Simple app state management


Options




JSON and serialization

Firebase



Accessibility & internationalization
    


Accessibility

Internationalization



Platform integration
    


Writing platform-specific code



Packages & plugins
    


Using packages

Developing packages & plugins

Background processes

Package site



Tools & techniques
    


Android Studio / IntelliJ

Visual Studio Code

Flutter SDK
    


Upgrading


Archive




Hot reload

Code formatting

Widget inspector




Testing & optimization


Debugging

Using OEM debuggers

Flutter's build modes

Testing

Performance best practices

Performance profiling



Deployment


Creating flavors for Flutter

Build and release for Android

Build and release for iOS

Continuous deployment with fastlane



Resources


Dart resources

Inside Flutter

Technical overview

Technical videos for learning Flutter

FAQ



Reference


Widget index

API reference

Package site





Showcase


Community









Get started




      Flutter 1.0 has been released!
      Learn more.
    

      Help improve Flutter! 
      Take our survey.
    





Get started


1. Install

2. Set up an editor

3. Test drive

4. Write your first app

5. Learn more

From another platform?
    


Flutter for Android devs

Flutter for iOS devs

Flutter for React Native devs

Flutter for web devs

Flutter for Xamarin.Forms devs



Dart language overview



Samples & tutorials


Sample apps on GitHub

Cookbook

Codelabs

Tutorials



Development


User interface
    


Introduction to Widgets

Building layouts
    


Layouts in Flutter


Tutorial


Box constraints




Adding interactivity

Assets and images

Navigation & routing

Animations
    


Introduction


Overview


Tutorial


Hero animations


Staggered animations




Advanced UI
    


Slivers


Gestures




Widget catalog



Data & backend
    


State management
    


Introduction


Think declaratively


Ephemeral vs app state


Simple app state management


Options




JSON and serialization

Firebase



Accessibility & internationalization
    


Accessibility

Internationalization



Platform integration
    


Writing platform-specific code



Packages & plugins
    


Using packages

Developing packages & plugins

Background processes

Package site



Tools & techniques
    


Android Studio / IntelliJ

Visual Studio Code

Flutter SDK
    


Upgrading


Archive




Hot reload

Code formatting

Widget inspector




Testing & optimization


Debugging

Using OEM debuggers

Flutter's build modes

Testing

Performance best practices

Performance profiling



Deployment


Creating flavors for Flutter

Build and release for Android

Build and release for iOS

Continuous deployment with fastlane



Resources


Dart resources

Inside Flutter

Technical overview

Technical videos for learning Flutter

FAQ



Reference


Widget index

API reference

Package site






    Contents
    
    

Write Your First Flutter App, part 1
Write Your First Flutter App, part 2
Building Beautiful UIs with Flutter
Firebase for Flutter
MDC 101 Flutter: Material Components (MDC) Basics
MDC 102 Flutter: Material Structure and Layout
MDC 103 Flutter: Material Theming with Color, Shape, Elevation, and Type
MDC 104 Flutter: Material Advanced Components












Codelabs



    Contents
    

Write Your First Flutter App, part 1
Write Your First Flutter App, part 2
Building Beautiful UIs with Flutter
Firebase for Flutter
MDC 101 Flutter: Material Components (MDC) Basics
MDC 102 Flutter: Material Structure and Layout
MDC 103 Flutter: Material Theming with Color, Shape, Elevation, and Type
MDC 104 Flutter: Material Advanced Components



Write Your First Flutter App, part 1

Create a simple mobile app that generates proposed names for a startup
company. In part one, you’ll use a package that returns pairs of words
at random and inserts them into an infinitely scrolling list.

Write Your First Flutter App, part 2

Create a simple mobile app that generates proposed names for a startup
company. In part two, you’ll extend the example from part 1 to allow
the user to select favorite word pairs, and add a second “Saved Favorites”
page where users can view the selected names.
Finally, you’ll change the app’s theme color.

Building Beautiful UIs with Flutter

A deeper “first dive” than “Write Your First Flutter App.” In this codelab
you’ll create a chat app that includes a simple animation, and customizes
the UI for iOS and Android.

Firebase for Flutter

Learn how to connect a Flutter app to a Firebase database, and how to use
a transaction to update shared information.

MDC 101 Flutter: Material Components (MDC) Basics

Learn the basics of using Material Components by building
a simple app with core components.  The four MDC codelabs
guide you through building an e-commerce app called Shrine.
You’ll start by building a login page using several of MDC
Flutter’s components.

MDC 102 Flutter: Material Structure and Layout

Learn how to use Material for structure and layout in Flutter.
Continue building the e-commerce app, introduced in MDC-101,
by adding navigation, structure, and data.

MDC 103 Flutter: Material Theming with Color, Shape, Elevation, and Type

Discover how Material Components for Flutter make it easy to differentiate
your product, and express your brand through design. Continue
building your e-commerce app by adding a home screen that displays products.

MDC 104 Flutter: Material Advanced Components

Improve your design and learn to use our advanced component backdrop menu.
Finish your e-commerce app by adding a backdrop with a menu that filters
products by the selected category.

For a full list of available Flutter codelabs, see the
Flutter category
on Google Developers.
If the previous link doesn’t work for you, try
this mirror of the Flutter codelabs.












flutter-dev@
terms
security
privacy
español
社区中文资源


            Except as otherwise noted,
            this work is licensed under a
            Creative
            Commons Attribution 4.0 International License,
            and code samples are licensed under the BSD License.
          





