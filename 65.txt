
  
  
  
  
  Code formatting  - Flutter 
  

  
  
  

  
  
  

  
  

  
  
  
  
  

  
  
  
  
  
  

  


    












Docs



Get started


1. Install

2. Set up an editor

3. Test drive

4. Write your first app

5. Learn more

From another platform?
    


Flutter for Android devs

Flutter for iOS devs

Flutter for React Native devs

Flutter for web devs

Flutter for Xamarin.Forms devs



Dart language overview



Samples & tutorials


Sample apps on GitHub

Cookbook

Codelabs

Tutorials



Development


User interface
    


Introduction to Widgets

Building layouts
    


Layouts in Flutter


Tutorial


Box constraints




Adding interactivity

Assets and images

Navigation & routing

Animations
    


Introduction


Overview


Tutorial


Hero animations


Staggered animations




Advanced UI
    


Slivers


Gestures




Widget catalog



Data & backend
    


State management
    


Introduction


Think declaratively


Ephemeral vs app state


Simple app state management


Options




JSON and serialization

Firebase



Accessibility & internationalization
    


Accessibility

Internationalization



Platform integration
    


Writing platform-specific code



Packages & plugins
    


Using packages

Developing packages & plugins

Background processes

Package site



Tools & techniques
    


Android Studio / IntelliJ

Visual Studio Code

Flutter SDK
    


Upgrading


Archive




Hot reload

Code formatting

Widget inspector




Testing & optimization


Debugging

Using OEM debuggers

Flutter's build modes

Testing

Performance best practices

Performance profiling



Deployment


Creating flavors for Flutter

Build and release for Android

Build and release for iOS

Continuous deployment with fastlane



Resources


Dart resources

Inside Flutter

Technical overview

Technical videos for learning Flutter

FAQ



Reference


Widget index

API reference

Package site





Showcase


Community









Get started




      Flutter 1.0 has been released!
      Learn more.
    

      Help improve Flutter! 
      Take our survey.
    





Get started


1. Install

2. Set up an editor

3. Test drive

4. Write your first app

5. Learn more

From another platform?
    


Flutter for Android devs

Flutter for iOS devs

Flutter for React Native devs

Flutter for web devs

Flutter for Xamarin.Forms devs



Dart language overview



Samples & tutorials


Sample apps on GitHub

Cookbook

Codelabs

Tutorials



Development


User interface
    


Introduction to Widgets

Building layouts
    


Layouts in Flutter


Tutorial


Box constraints




Adding interactivity

Assets and images

Navigation & routing

Animations
    


Introduction


Overview


Tutorial


Hero animations


Staggered animations




Advanced UI
    


Slivers


Gestures




Widget catalog



Data & backend
    


State management
    


Introduction


Think declaratively


Ephemeral vs app state


Simple app state management


Options




JSON and serialization

Firebase



Accessibility & internationalization
    


Accessibility

Internationalization



Platform integration
    


Writing platform-specific code



Packages & plugins
    


Using packages

Developing packages & plugins

Background processes

Package site



Tools & techniques
    


Android Studio / IntelliJ

Visual Studio Code

Flutter SDK
    


Upgrading


Archive




Hot reload

Code formatting

Widget inspector




Testing & optimization


Debugging

Using OEM debuggers

Flutter's build modes

Testing

Performance best practices

Performance profiling



Deployment


Creating flavors for Flutter

Build and release for Android

Build and release for iOS

Continuous deployment with fastlane



Resources


Dart resources

Inside Flutter

Technical overview

Technical videos for learning Flutter

FAQ



Reference


Widget index

API reference

Package site






    Contents
    
    

Automatically formatting code in Android Studio and IntelliJ
Automatically formatting code in VS Code
Automatically formatting code with the ‘flutter’ command
Using trailing commas












Code formatting


Docs


Development


Tools


Code formatting







    Contents
    

Automatically formatting code in Android Studio and IntelliJ
Automatically formatting code in VS Code
Automatically formatting code with the ‘flutter’ command
Using trailing commas


While your code may follow any preferred style—in our
experience—teams of developers may find it more productive to:

Have a single, shared style, and
Enforce this style through automatic formatting.

The alternative is often tiring formatting debates during code reviews, where
time may be better spent on code behavior rather than code style.

Automatically formatting code in Android Studio and IntelliJ
Install the Dart plugin (see Editor setup)
to get automatic formatting of code in Android Studio and IntelliJ.
To automatically format the code in the current source code window, right-click
in the code window and select Reformat Code with dartfmt.
You can add a keyboard shortcut to this in Keymap section of IntelliJ
Preferences.

Automatically formatting code in VS Code
Install the Flutter extension (see Editor setup)
to get automatic formatting of code in VS Code.
To automatically format the code in the current source code window, right-click
in the code window and select Format Document. You can add a keyboard
shortcut to this VS Code Preferences.
To automatically format code whenever you save a file, set the
editor.formatOnSave setting to true.

Automatically formatting code with the ‘flutter’ command
You can also automatically format code in the command line interface (CLI) using
the flutter format command:
$ flutter format path1 path2 ...


Using trailing commas
Flutter code often involves building fairly deep tree-shaped data structures,
for example in a build method. To get good automatic formatting, we recommend
you adopt the optional trailing commas. The guideline for adding a trailing
comma is simple: Always add a trailing comma at the end of a parameter list in
functions, methods, and constructors where you care about keeping the formatting
you crafted. This helps the automatic formatter to insert an appropriate
amount of line breaks for Flutter-style code.
Here is an example of automatically formatted code with trailing commas:

And the same code automatically formatted code without trailing commas:













flutter-dev@
terms
security
privacy
español
社区中文资源


            Except as otherwise noted,
            this work is licensed under a
            Creative
            Commons Attribution 4.0 International License,
            and code samples are licensed under the BSD License.
          





